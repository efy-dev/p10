<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        ">

    <context:component-scan base-package="com.efeiyi.pal"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
                <prop key="hibernate.ejb.use_class_enhancer">true</prop>
                <!--<prop key="hibernate.cache.use_second_level_cache">false</prop>-->
                <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>-->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.ming800.**.model</value>
                <value>com.efeiyi.**.model</value>
            </list>
        </property>
    </bean>

    <context:annotation-config/>
    <!-- 定义切面 -->
    <aop:config>
        <aop:advisor id="managerTx2" advice-ref="txAdvice2" pointcut="execution(* com.efeiyi.pal.system.label.labelService.impl.*.*(..))"/>
        <!--<aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* com.efeiyi.ec.website.organization.service.*.*(..))"/>-->
    </aop:config>

    <tx:annotation-driven/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:advice id="txAdvice2" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
            <tx:method name="list*" read-only="true" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
            <tx:method name="form*" read-only="true" rollback-for="java.lang.Exception" propagation="REQUIRED"/>
            <tx:method name="buildLabelSetByLabelBatch"  rollback-for="java.lang.Exception" propagation="NESTED"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>



    <bean id="labelServiceManagerImpl" class="com.efeiyi.pal.system.order.service.impl.LabelServiceManagerImpl"/>
    <bean id="labelDaoHibernate" class="com.efeiyi.pal.system.order.dao.hibernate.LabelDaoHibernate"/>

    <bean id="productServiceManagerImpl" class="com.efeiyi.pal.system.product.service.impl.ProductServiceManagerImpl"/>
    <bean id="productDaoHibernate" class="com.efeiyi.pal.system.product.dao.hibernate.ProductDaoHibernate"/>

    <!--userDao用于spring security-->
    <bean id="userDao" class="com.efeiyi.pal.system.organization.dao.hibernate.UserDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="userLoginManager" class="com.efeiyi.pal.system.organization.service.UserLoginManager">
        <property name="userLoginDao" ref="userDao"/>
    </bean>
</beans>
